// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

// Layer definitions

#define BSE 0
#define MDA 1
#define NAV 2
#define SYM 3
#define NUM 4
#define FUN 5

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <300>;
            key-positions = <30 31>;
            bindings = <&lt MDA ESC>;
            layers = <0>;
        };

        combo_del {
            timeout-ms = <300>;
            key-positions = <32 33>;
            bindings = <&lt FUN DEL>;
            layers = <0>;
        };

        cced_combo {
            bindings = <&cced_macro>;
            key-positions = <12 22>;
            layers = <0>;
        };
    };

    macros {
        cced_macro: cced_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp C>;
            label = "CCED_MACRO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            bindings = <
&kp Q       &kp W       &kp E        &kp R          &kp T      &kp Y        &kp U         &kp I        &kp O       &kp P
&mt LGUI A  &mt LALT S  &mt LCTRL D  &mt LSHFT F    &kp G      &kp H        &mt LSHFT J   &mt LCTRL K  &mt LALT L  &mt LGUI SQT
&kp Z       &kp X       &kp C        &kp V          &kp B      &kp N        &kp M         &kp COMMA    &kp DOT     &kp SLASH
                                     &lt NAV SPACE  &kp TAB    &lt SYM RET  &lt NUM BSPC
            >;
        };

        media_layer {
            bindings = <
&none  &none  &none  &none  &none    &none             &none         &none         &none         &none
&none  &none  &none  &none  &none    &kp C_PREV        &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT    &none
&none  &none  &none  &none  &none    &bt BT_SEL 0      &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_CLR
                     &none  &none    &kp K_PLAY_PAUSE  &kp C_MUTE
            >;
        };

        nav_layer {
            bindings = <
&none  &none  &none  &none  &none    &none     &none      &none      &none      &none
&none  &none  &none  &none  &none    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &caps_word
&none  &none  &none  &none  &none    &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp INS
                     &none  &none    &kp RET   &kp BSPC
            >;
        };

        sym_layer {
            bindings = <
&kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC     &none  &none  &none  &none  &none
&kp COLON  &kp DLLR  &kp PRCNT  &kp CARET  &kp PLUS     &none  &none  &none  &none  &none
&kp TILDE  &kp EXCL  &kp AT     &kp HASH   &kp PIPE     &none  &none  &none  &none  &none
                                &kp RPAR   &kp UNDER    &none  &none
            >;
        };

        num_layer {
            bindings = <
&kp LBKT   &kp N7  &kp N8  &kp N9  &kp RBKT     &none  &none  &none  &none  &none
&kp SEMI   &kp N4  &kp N5  &kp N7  &kp EQUAL    &none  &none  &none  &none  &none
&kp GRAVE  &kp N1  &kp N2  &kp N3  &kp BSLH     &none  &none  &none  &none  &none
                           &kp N0  &kp MINUS    &none  &none
            >;
        };

        fun_layer {
            bindings = <
&kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN          &none  &none  &none  &none  &none
&kp F11  &kp F4  &kp F5  &kp F6  &kp SLCK           &none  &none  &none  &none  &none
&kp F10  &kp F1  &kp F2  &kp F3  &kp PAUSE_BREAK    &none  &none  &none  &none  &none
                         &none   &none              &none  &none
            >;
        };
    };
};
